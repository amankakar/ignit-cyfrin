{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chimera/=node_modules/chimera/src/\",\":@crytic/=node_modules/@crytic/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":chimera/=node_modules/chimera/\",\":ds-test/=node_modules/chimera/lib/forge-std/lib/ds-test/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chimera/=node_modules/chimera/src/","@crytic/=node_modules/@crytic/","@ensdomains/=node_modules/@ensdomains/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@openzeppelin/=node_modules/@openzeppelin/","chimera/=node_modules/chimera/","ds-test/=node_modules/chimera/lib/forge-std/lib/ds-test/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271","urls":["bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618","dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790","urls":["bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a","dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183","urls":["bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06","dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":41197,"exportedSymbols":{"AddressUpgradeable":[41900],"Initializable":[40996],"ReentrancyGuardUpgradeable":[41196]},"nodeType":"SourceUnit","src":"112:3264:27","nodes":[{"id":41125,"nodeType":"PragmaDirective","src":"112:23:27","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":41126,"nodeType":"ImportDirective","src":"136:42:27","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":41197,"sourceUnit":40997,"symbolAliases":[],"unitAlias":""},{"id":41196,"nodeType":"ContractDefinition","src":"931:2444:27","nodes":[{"id":41132,"nodeType":"VariableDeclaration","src":"1747:41:27","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:27","scope":41196,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":41131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":41135,"nodeType":"VariableDeclaration","src":"1794:37:27","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:27","scope":41196,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":41134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:27","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":41137,"nodeType":"VariableDeclaration","src":"1838:23:27","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1854:7:27","scope":41196,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41136,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":41146,"nodeType":"FunctionDefinition","src":"1868:111:27","nodes":[],"body":{"id":41145,"nodeType":"Block","src":"1928:51:27","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41142,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41156,"src":"1938:32:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":41143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41144,"nodeType":"ExpressionStatement","src":"1938:34:27"}]},"implemented":true,"kind":"function","modifiers":[{"id":41140,"kind":"modifierInvocation","modifierName":{"id":41139,"name":"onlyInitializing","nameLocations":["1911:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":40941,"src":"1911:16:27"},"nodeType":"ModifierInvocation","src":"1911:16:27"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:27","parameters":{"id":41138,"nodeType":"ParameterList","parameters":[],"src":"1899:2:27"},"returnParameters":{"id":41141,"nodeType":"ParameterList","parameters":[],"src":"1928:0:27"},"scope":41196,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":41156,"nodeType":"FunctionDefinition","src":"1985:109:27","nodes":[],"body":{"id":41155,"nodeType":"Block","src":"2055:39:27","nodes":[],"statements":[{"expression":{"id":41153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41151,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41137,"src":"2065:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41152,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41132,"src":"2075:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41154,"nodeType":"ExpressionStatement","src":"2065:22:27"}]},"implemented":true,"kind":"function","modifiers":[{"id":41149,"kind":"modifierInvocation","modifierName":{"id":41148,"name":"onlyInitializing","nameLocations":["2038:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":40941,"src":"2038:16:27"},"nodeType":"ModifierInvocation","src":"2038:16:27"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:27","parameters":{"id":41147,"nodeType":"ParameterList","parameters":[],"src":"2026:2:27"},"returnParameters":{"id":41150,"nodeType":"ParameterList","parameters":[],"src":"2055:0:27"},"scope":41196,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":41167,"nodeType":"ModifierDefinition","src":"2471:103:27","nodes":[],"body":{"id":41166,"nodeType":"Block","src":"2495:79:27","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41159,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41182,"src":"2505:19:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":41160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41161,"nodeType":"ExpressionStatement","src":"2505:21:27"},{"id":41162,"nodeType":"PlaceholderStatement","src":"2536:1:27"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41163,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41190,"src":"2547:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":41164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41165,"nodeType":"ExpressionStatement","src":"2547:20:27"}]},"documentation":{"id":41157,"nodeType":"StructuredDocumentation","src":"2100:366:27","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2480:12:27","parameters":{"id":41158,"nodeType":"ParameterList","parameters":[],"src":"2492:2:27"},"virtual":false,"visibility":"internal"},{"id":41182,"nodeType":"FunctionDefinition","src":"2580:287:27","nodes":[],"body":{"id":41181,"nodeType":"Block","src":"2619:248:27","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":41173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":41171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41137,"src":"2712:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":41172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41135,"src":"2723:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":41174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":41170,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2704:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":41175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2704:63:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41176,"nodeType":"ExpressionStatement","src":"2704:63:27"},{"expression":{"id":41179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41177,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41137,"src":"2842:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41178,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41135,"src":"2852:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41180,"nodeType":"ExpressionStatement","src":"2842:18:27"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:27","parameters":{"id":41168,"nodeType":"ParameterList","parameters":[],"src":"2608:2:27"},"returnParameters":{"id":41169,"nodeType":"ParameterList","parameters":[],"src":"2619:0:27"},"scope":41196,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":41190,"nodeType":"FunctionDefinition","src":"2873:209:27","nodes":[],"body":{"id":41189,"nodeType":"Block","src":"2911:171:27","nodes":[],"statements":[{"expression":{"id":41187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41185,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41137,"src":"3053:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41186,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41132,"src":"3063:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41188,"nodeType":"ExpressionStatement","src":"3053:22:27"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:27","parameters":{"id":41183,"nodeType":"ParameterList","parameters":[],"src":"2900:2:27"},"returnParameters":{"id":41184,"nodeType":"ParameterList","parameters":[],"src":"2911:0:27"},"scope":41196,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":41195,"nodeType":"VariableDeclaration","src":"3347:25:27","nodes":[],"constant":false,"documentation":{"id":41191,"nodeType":"StructuredDocumentation","src":"3088:254:27","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"3367:5:27","scope":41196,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":41192,"name":"uint256","nodeType":"ElementaryTypeName","src":"3347:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41194,"length":{"hexValue":"3439","id":41193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3355:2:27","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3347:11:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":41128,"name":"Initializable","nameLocations":["979:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":40996,"src":"979:13:27"},"id":41129,"nodeType":"InheritanceSpecifier","src":"979:13:27"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":41127,"nodeType":"StructuredDocumentation","src":"180:750:27","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[41196,40996],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:27","scope":41197,"usedErrors":[],"usedEvents":[40842]}],"license":"MIT"},"id":27}