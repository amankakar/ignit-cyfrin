{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chimera/=node_modules/chimera/src/\",\":@crytic/=node_modules/@crytic/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":chimera/=node_modules/chimera/\",\":ds-test/=node_modules/chimera/lib/forge-std/lib/ds-test/\",\":forge-std/=node_modules/chimera/lib/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=node_modules/solmate/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chimera/=node_modules/chimera/src/","@crytic/=node_modules/@crytic/","@ensdomains/=node_modules/@ensdomains/","@ethereum-waffle/=node_modules/@ethereum-waffle/","@openzeppelin/=node_modules/@openzeppelin/","chimera/=node_modules/chimera/","ds-test/=node_modules/chimera/lib/forge-std/lib/ds-test/","forge-std/=node_modules/chimera/lib/forge-std/","hardhat/=node_modules/hardhat/","solmate/=node_modules/solmate/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":"ContextUpgradeable"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef","urls":["bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95","dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","id":1688,"exportedSymbols":{"ContextUpgradeable":[1687],"Initializable":[578]},"nodeType":"SourceUnit","src":"101:1383:10","nodes":[{"id":1638,"nodeType":"PragmaDirective","src":"101:23:10","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1640,"nodeType":"ImportDirective","src":"125:63:10","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":1688,"sourceUnit":579,"symbolAliases":[{"foreign":{"id":1639,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"133:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":1687,"nodeType":"ContractDefinition","src":"687:796:10","nodes":[{"id":1649,"nodeType":"FunctionDefinition","src":"747:59:10","nodes":[],"body":{"id":1648,"nodeType":"Block","src":"799:7:10","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":1646,"kind":"modifierInvocation","modifierName":{"id":1645,"name":"onlyInitializing","nameLocations":["782:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"782:16:10"},"nodeType":"ModifierInvocation","src":"782:16:10"}],"name":"__Context_init","nameLocation":"756:14:10","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"770:2:10"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"799:0:10"},"scope":1687,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1655,"nodeType":"FunctionDefinition","src":"812:69:10","nodes":[],"body":{"id":1654,"nodeType":"Block","src":"874:7:10","nodes":[],"statements":[]},"implemented":true,"kind":"function","modifiers":[{"id":1652,"kind":"modifierInvocation","modifierName":{"id":1651,"name":"onlyInitializing","nameLocations":["857:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"857:16:10"},"nodeType":"ModifierInvocation","src":"857:16:10"}],"name":"__Context_init_unchained","nameLocation":"821:24:10","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[],"src":"845:2:10"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"874:0:10"},"scope":1687,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":1664,"nodeType":"FunctionDefinition","src":"886:96:10","nodes":[],"body":{"id":1663,"nodeType":"Block","src":"948:34:10","nodes":[],"statements":[{"expression":{"expression":{"id":1660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:10","memberName":"sender","nodeType":"MemberAccess","src":"965:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1659,"id":1662,"nodeType":"Return","src":"958:17:10"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:10","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"905:2:10"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1664,"src":"939:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:10"},"scope":1687,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1673,"nodeType":"FunctionDefinition","src":"988:99:10","nodes":[],"body":{"id":1672,"nodeType":"Block","src":"1055:32:10","nodes":[],"statements":[{"expression":{"expression":{"id":1669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:10","memberName":"data","nodeType":"MemberAccess","src":"1072:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1668,"id":1671,"nodeType":"Return","src":"1065:15:10"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:10","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"1005:2:10"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"1039:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1666,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:10"},"scope":1687,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1681,"nodeType":"FunctionDefinition","src":"1093:97:10","nodes":[],"body":{"id":1680,"nodeType":"Block","src":"1165:25:10","nodes":[],"statements":[{"expression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1677,"id":1679,"nodeType":"Return","src":"1175:8:10"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:10","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"1122:2:10"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"1156:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:10"},"scope":1687,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":1686,"nodeType":"VariableDeclaration","src":"1455:25:10","nodes":[],"constant":false,"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1196:254:10","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"1475:5:10","scope":1687,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"length":{"hexValue":"3530","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":1642,"name":"Initializable","nameLocations":["727:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":578,"src":"727:13:10"},"id":1643,"nodeType":"InheritanceSpecifier","src":"727:13:10"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"190:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[1687,578],"name":"ContextUpgradeable","nameLocation":"705:18:10","scope":1688,"usedErrors":[],"usedEvents":[424]}],"license":"MIT"},"id":10}